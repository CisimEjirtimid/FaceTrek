<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{7117D30A-C8DF-4666-8B61-A301B81364B3}</ProjectGUID>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>dlib</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\git\Dlib\dlib\examples\build\dlib_build\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">dlib.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">dlib</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\git\Dlib\dlib\examples\build\dlib_build\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">dlib.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">dlib</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\git\Dlib\dlib\examples\build\dlib_build\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">dlib.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">dlib</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\git\Dlib\dlib\examples\build\dlib_build\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">dlib.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">dlib</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.lib</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalOptions> /bigobj /bigobj %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>C:\git\Dlib\dlib\dlib\..;C:\git\Dlib\dlib\dlib\external\libpng;C:\git\Dlib\dlib\dlib\external\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DLIB_JPEG_SUPPORT;DLIB_PNG_SUPPORT;_DEBUG;ENABLE_ASSERTS;DLIB_JPEG_STATIC;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DLIB_JPEG_SUPPORT;DLIB_PNG_SUPPORT;_DEBUG;ENABLE_ASSERTS;DLIB_JPEG_STATIC;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\git\Dlib\dlib\dlib\..;C:\git\Dlib\dlib\dlib\external\libpng;C:\git\Dlib\dlib\dlib\external\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\git\Dlib\dlib\dlib\..;C:\git\Dlib\dlib\dlib\external\libpng;C:\git\Dlib\dlib\dlib\external\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalOptions> /bigobj /bigobj %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>C:\git\Dlib\dlib\dlib\..;C:\git\Dlib\dlib\dlib\external\libpng;C:\git\Dlib\dlib\dlib\external\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DLIB_JPEG_SUPPORT;DLIB_PNG_SUPPORT;NDEBUG;DLIB_JPEG_STATIC;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DLIB_JPEG_SUPPORT;DLIB_PNG_SUPPORT;NDEBUG;DLIB_JPEG_STATIC;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\git\Dlib\dlib\dlib\..;C:\git\Dlib\dlib\dlib\external\libpng;C:\git\Dlib\dlib\dlib\external\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\git\Dlib\dlib\dlib\..;C:\git\Dlib\dlib\dlib\external\libpng;C:\git\Dlib\dlib\dlib\external\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalOptions> /bigobj /bigobj %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>C:\git\Dlib\dlib\dlib\..;C:\git\Dlib\dlib\dlib\external\libpng;C:\git\Dlib\dlib\dlib\external\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DLIB_JPEG_SUPPORT;DLIB_PNG_SUPPORT;NDEBUG;DLIB_JPEG_STATIC;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DLIB_JPEG_SUPPORT;DLIB_PNG_SUPPORT;NDEBUG;DLIB_JPEG_STATIC;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\git\Dlib\dlib\dlib\..;C:\git\Dlib\dlib\dlib\external\libpng;C:\git\Dlib\dlib\dlib\external\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\git\Dlib\dlib\dlib\..;C:\git\Dlib\dlib\dlib\external\libpng;C:\git\Dlib\dlib\dlib\external\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalOptions> /bigobj /bigobj %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>C:\git\Dlib\dlib\dlib\..;C:\git\Dlib\dlib\dlib\external\libpng;C:\git\Dlib\dlib\dlib\external\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <EnableEnhancedInstructionSet>AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DLIB_JPEG_SUPPORT;DLIB_PNG_SUPPORT;NDEBUG;DLIB_JPEG_STATIC;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DLIB_JPEG_SUPPORT;DLIB_PNG_SUPPORT;NDEBUG;DLIB_JPEG_STATIC;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\git\Dlib\dlib\dlib\..;C:\git\Dlib\dlib\dlib\external\libpng;C:\git\Dlib\dlib\dlib\external\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\git\Dlib\dlib\dlib\..;C:\git\Dlib\dlib\dlib\external\libpng;C:\git\Dlib\dlib\dlib\external\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\git\Dlib\dlib\dlib\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/git/Dlib/dlib/dlib/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -HC:/git/Dlib/dlib/examples -BC:/git/Dlib/dlib/examples/build --check-stamp-file C:\git\Dlib\dlib\examples\build\dlib_build\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/git/Dlib/dlib/dlib/CMakeLists.txt;C:\git\Dlib\dlib\dlib\CMakeLists.txt;C:\git\Dlib\dlib\dlib\cmake_utils\release_build_by_default;C:\git\Dlib\dlib\dlib\cmake_utils\use_cpp_11.cmake;C:\git\Dlib\dlib\dlib\cmake_utils\add_global_compiler_switch.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CheckFunctionExists.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPNG.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindZLIB.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindJPEG.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeParseArguments.cmake;C:\git\Dlib\dlib\dlib\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\git\Dlib\dlib\examples\build\dlib_build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/git/Dlib/dlib/dlib/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -HC:/git/Dlib/dlib/examples -BC:/git/Dlib/dlib/examples/build --check-stamp-file C:\git\Dlib\dlib\examples\build\dlib_build\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/git/Dlib/dlib/dlib/CMakeLists.txt;C:\git\Dlib\dlib\dlib\CMakeLists.txt;C:\git\Dlib\dlib\dlib\cmake_utils\release_build_by_default;C:\git\Dlib\dlib\dlib\cmake_utils\use_cpp_11.cmake;C:\git\Dlib\dlib\dlib\cmake_utils\add_global_compiler_switch.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CheckFunctionExists.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPNG.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindZLIB.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindJPEG.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeParseArguments.cmake;C:\git\Dlib\dlib\dlib\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\git\Dlib\dlib\examples\build\dlib_build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/git/Dlib/dlib/dlib/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -HC:/git/Dlib/dlib/examples -BC:/git/Dlib/dlib/examples/build --check-stamp-file C:\git\Dlib\dlib\examples\build\dlib_build\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/git/Dlib/dlib/dlib/CMakeLists.txt;C:\git\Dlib\dlib\dlib\CMakeLists.txt;C:\git\Dlib\dlib\dlib\cmake_utils\release_build_by_default;C:\git\Dlib\dlib\dlib\cmake_utils\use_cpp_11.cmake;C:\git\Dlib\dlib\dlib\cmake_utils\add_global_compiler_switch.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CheckFunctionExists.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPNG.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindZLIB.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindJPEG.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeParseArguments.cmake;C:\git\Dlib\dlib\dlib\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\git\Dlib\dlib\examples\build\dlib_build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/git/Dlib/dlib/dlib/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -HC:/git/Dlib/dlib/examples -BC:/git/Dlib/dlib/examples/build --check-stamp-file C:\git\Dlib\dlib\examples\build\dlib_build\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/git/Dlib/dlib/dlib/CMakeLists.txt;C:\git\Dlib\dlib\dlib\CMakeLists.txt;C:\git\Dlib\dlib\dlib\cmake_utils\release_build_by_default;C:\git\Dlib\dlib\dlib\cmake_utils\use_cpp_11.cmake;C:\git\Dlib\dlib\dlib\cmake_utils\add_global_compiler_switch.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CheckFunctionExists.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPNG.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindZLIB.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeParseArguments.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindJPEG.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\FindPackageMessage.cmake;C:\Program Files (x86)\CMake\share\cmake-3.2\Modules\CMakeParseArguments.cmake;C:\git\Dlib\dlib\dlib\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\git\Dlib\dlib\examples\build\dlib_build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\base64\base64_kernel_1.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\bigint\bigint_kernel_1.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\bigint\bigint_kernel_2.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\bit_stream\bit_stream_kernel_1.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\entropy_decoder\entropy_decoder_kernel_1.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\entropy_decoder\entropy_decoder_kernel_2.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\entropy_encoder\entropy_encoder_kernel_1.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\entropy_encoder\entropy_encoder_kernel_2.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\md5\md5_kernel_1.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\tokenizer\tokenizer_kernel_1.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\unicode\unicode.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\data_io\image_dataset_metadata.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\data_io\mnist.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\sockets\sockets_kernel_1.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\bsp\bsp.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\dir_nav\dir_nav_kernel_1.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\dir_nav\dir_nav_kernel_2.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\dir_nav\dir_nav_extensions.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\linker\linker_kernel_1.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\logger\extra_logger_headers.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\logger\logger_kernel_1.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\logger\logger_config_file.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\misc_api\misc_api_kernel_1.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\misc_api\misc_api_kernel_2.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\sockets\sockets_extensions.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\sockets\sockets_kernel_2.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\sockstreambuf\sockstreambuf.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\sockstreambuf\sockstreambuf_unbuffered.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\server\server_kernel.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\server\server_iostream.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\server\server_http.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\threads\multithreaded_object_extension.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\threads\threaded_object_extension.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\threads\threads_kernel_1.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\threads\threads_kernel_2.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\threads\threads_kernel_shared.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\threads\thread_pool_extension.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\timer\timer.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\stack_trace.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\gui_widgets\fonts.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\gui_widgets\widgets.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\gui_widgets\drawable.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\gui_widgets\canvas_drawing.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\gui_widgets\style.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\gui_widgets\base_widgets.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\gui_core\gui_core_kernel_1.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\gui_core\gui_core_kernel_2.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libpng\png.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libpng\pngerror.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libpng\pngget.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libpng\pngmem.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libpng\pngpread.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libpng\pngread.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libpng\pngrio.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libpng\pngrtran.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libpng\pngrutil.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libpng\pngset.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libpng\pngtrans.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libpng\pngwio.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libpng\pngwrite.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libpng\pngwtran.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libpng\pngwutil.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\zlib\adler32.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\zlib\compress.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\zlib\crc32.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\zlib\deflate.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\zlib\gzclose.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\zlib\gzlib.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\zlib\gzread.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\zlib\gzwrite.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\zlib\infback.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\zlib\inffast.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\zlib\inflate.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\zlib\inftrees.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\zlib\trees.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\zlib\uncompr.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\zlib\zutil.c">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CompileAsC</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CompileAsC</CompileAs>
    </ClCompile>
    <ClCompile Include="C:\git\Dlib\dlib\dlib\image_loader\png_loader.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\image_saver\save_png.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jcomapi.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jdapimin.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jdapistd.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jdatasrc.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jdcoefct.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jdcolor.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jddctmgr.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jdhuff.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jdinput.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jdmainct.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jdmarker.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jdmaster.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jdmerge.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jdphuff.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jdpostct.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jdsample.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jerror.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jidctflt.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jidctfst.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jidctint.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jidctred.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jmemmgr.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jmemnobs.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jquant1.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jquant2.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jutils.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jcapimin.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jdatadst.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jcparam.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jcapistd.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jcmarker.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jcinit.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jcmaster.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jcdctmgr.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jccoefct.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jccolor.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jchuff.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jcmainct.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jcphuff.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jcprepct.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jcsample.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jfdctint.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jfdctflt.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\external\libjpeg\jfdctfst.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\image_loader\jpeg_loader.cpp" />
    <ClCompile Include="C:\git\Dlib\dlib\dlib\image_saver\save_jpeg.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:/git/Dlib/dlib/examples/build/ZERO_CHECK.vcxproj">
      <Project>1EA19446-BBC8-421C-827F-95FF6CD4E98D</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>